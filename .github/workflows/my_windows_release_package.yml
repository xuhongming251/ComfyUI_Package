name: "My Windows Release packaging"

on:
  workflow_dispatch:
    inputs:
      cu:
        description: 'cuda version'
        required: true
        type: string
        default: "124"

      python_minor:
        description: 'python minor version'
        required: true
        type: string
        default: "12"

      python_patch:
        description: 'python patch version'
        required: true
        type: string
        default: "7"
#  push:
#    branches:
#      - master

jobs:
  package_comfyui:
    permissions:
        contents: "write"
        packages: "write"
        pull-requests: "read"
    runs-on: windows-latest
    steps:
        - uses: actions/cache/restore@v4
          id: cache
          with:
            path: |
              cu${{ inputs.cu }}_python_deps.tar
            key: ${{ runner.os }}-build-cu${{ inputs.cu }}-${{ inputs.python_minor }}
        - shell: bash
          run: |
            mv cu${{ inputs.cu }}_python_deps.tar ../
            cd ..
            tar xf cu${{ inputs.cu }}_python_deps.tar
            pwd
            ls

        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
            persist-credentials: false
        - shell: bash
          run: |
            git clone --depth 1 https://github.com/comfyanonymous/ComfyUI.git
            cp -r ComfyUI ComfyUI_copy
            curl https://www.python.org/ftp/python/3.${{ inputs.python_minor }}.${{ inputs.python_patch }}/python-3.${{ inputs.python_minor }}.${{ inputs.python_patch }}-embed-amd64.zip -o python_embeded.zip
            unzip python_embeded.zip -d python_embeded
            cd python_embeded
            echo 'import site' >> ./python3${{ inputs.python_minor }}._pth
            curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
            ./python.exe get-pip.py
            sed -i '1i../ComfyUI' ./python3${{ inputs.python_minor }}._pth
            cd ..

            mkdir ComfyUI_windows_portable
            mv python_embeded ComfyUI_windows_portable
            mv ComfyUI_copy ComfyUI_windows_portable/ComfyUI
            mv cu${{ inputs.cu }}_python_deps ComfyUI_windows_portable/comfyui_python_deps

            cd ComfyUI_windows_portable

            mkdir update
            cp -r ComfyUI/.ci/update_windows/* ./update/
            cp -r ComfyUI/.ci/windows_base_files/run_nvidia_gpu.bat ./2、Start ComfyUI.bat

            echo "@echo off
            setlocal enabledelayedexpansion

            cd /d %~dp0

            set DEPS_DIR=comfyui_deps
            set PYTHON_EXE=python_embeded\python.exe

            if not exist "%DEPS_DIR%" (
                echo Directory %DEPS_DIR% does not exist.
                pause
                exit /b 1
            )

            for %%f in ("%DEPS_DIR%\*.whl") do (
                set FILE=%%f
                echo Installing !FILE!
                "%PYTHON_EXE%" -s -m pip install --no-index --find-links="%DEPS_DIR%" "!FILE!"
                if errorlevel 1 (
                    echo Failed to install !FILE!
                    pause
                    exit /b 1
                )
            )

            echo All dependencies installed successfully.
            pause" > 1、Offline Install ComfyUI Dependencies.bat

            cd ..

            DATE=$(date +'%Y%m%d')
            "C:\Program Files\7-Zip\7z.exe" a -t7z -m0=lzma2 -mx=8 -mfb=64 -md=32m -ms=on -mf=BCJ2 "ComfyUI_windows_portable_$DATE.7z" ComfyUI_windows_portable
            mv "ComfyUI_windows_portable_$DATE.7z" ComfyUI/"ComfyUI_windows_portable_$DATE.7z"

            cd ComfyUI_windows_portable

            ls

        # - name: Upload binaries to release
        #   uses: svenstaro/upload-release-action@v2
        #   with:
        #         repo_token: ${{ secrets.GITHUB_TOKEN }}
        #         file: new_ComfyUI_windows_portable_nvidia_cu${{ inputs.cu }}_or_cpu.7z
        #         tag: "latest"
        #         overwrite: true

        - uses: yizhoumo/setup-ossutil@v2
          with:
            ## The version to download and use, or 'latest' for the latest version.
            ossutil-version: '1.7.18'

            # The following parameters are (optionally) used to config the credential.
            ## The endpoint of the region in which the bucket is located.
            endpoint: ${{ secrets.ALIYUN_OSS_ENDPOINT }}
            ## The AccessKey ID of the credential.
            access-key-id: ${{ secrets.ALIYUN_ACCESS_KEY_ID }}
            ## The AccessKey Secret of the credential.
            access-key-secret: ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}

          - run: |
            DATE=$(date +'%Y%m%d')
            ossutil cp "ComfyUI_windows_portable_$DATE.7z" oss://mycomfyui/ComfyUI/


